<?xml version="1.0" encoding="UTF-8" ?>

<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd "
	>

	<!-- 
		/properties/dao/dao.xml
		The configuration file for Data Access Object.
		This file should not be modified but by the developers.
		This file is referenced by /properties/applicationContext.xml.
	-->

	<!-- Session factories -->

	<bean 
		id="abstractHibernateSessionFactory" 
		abstract="true" 
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		>
		<description>
			This bean is common to all the session factories (see below). It allows 
			a single declaration of the mapping files.
		</description>
		<property name="mappingLocations">
			<list>
				<value>
					classpath:/properties/dao/hibernate/mapping/*.hbm.xml
				</value>
			</list>
		</property>
	</bean>
	
	<bean 
		id="jdbcSessionFactory" 
		parent="abstractHibernateSessionFactory"
		lazy-init="true" 
		>
		<description>
			An abstract session factory based on JDBC.
		</description>

		<property name="hibernateProperties">
		  <props>
		    <prop key="hibernate.connection.driver_class">${hibernate.connection.driver_class}</prop>
		    <prop key="hibernate.dialect">${hibernate.dialect}</prop>
		    <prop key="hibernate.connection.url">${hibernate.connection.jdbc.url}</prop>
		    <prop key="hibernate.connection.username">${hibernate.connection.jdbc.username}</prop>
		    <prop key="hibernate.connection.password">${hibernate.connection.jdbc.password}</prop>
		  </props>
		</property>

		<property name="configLocation"
			value="classpath:/properties/dao/hibernate/hibernate-jdbc.cfg.xml" />
	</bean>
	
	<bean 
		id="jndiSessionFactory" 
		parent="abstractHibernateSessionFactory"
		lazy-init="true" 
		>
		<description>
			An abstract session factory based on JDBC.
		</description>

		<property name="hibernateProperties">
		  <props>
		    <prop key="hibernate.connection.driver_class">${hibernate.connection.driver_class}</prop>
		    <prop key="hibernate.dialect">${hibernate.dialect}</prop>
		    <prop key="hibernate.connection.datasource">java:/comp/env/${hibernate.connection.jndi.datasource}</prop>
		  </props>
		</property>
		    
		<property name="configLocation"
			value="classpath:/properties/dao/hibernate/hibernate-jndi.cfg.xml" />
	</bean>

	<bean id="sessionFactoryBeanName" class="java.lang.String">
	  <constructor-arg value="#{${hibernate.useJndi} ? 'jndiSessionFactory' : 'jdbcSessionFactory'}"/>
	</bean>

	<!-- end of the session factories -->

	<bean 
		id="daoService" 
		class="org.esupportail.smsu.dao.HibernateDaoServiceImpl" 
		lazy-init="true"
		>
		<description>
			This bean is the DAO service, the interface used by the domain service to access 
			the database. It must implement interface org.esupportail.smsu.dao.DaoService.
		</description>
		<property name="sessionFactory" ref="#{sessionFactoryBeanName}"></property>
	</bean>

	<bean id="OneHibernateSessionPerRequest"
	      class="org.springframework.orm.hibernate3.support.OpenSessionInViewFilter">
	      <property name="flushMode" value="AUTO" />
	      <property name="sessionFactoryBeanName" value="#{sessionFactoryBeanName}" />
	</bean>
		
</beans>
